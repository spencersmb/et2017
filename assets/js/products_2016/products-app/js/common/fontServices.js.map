{"version":3,"sources":["common/fontServices.ts"],"names":["app","app.common","app.common.FontAccessService","app.common.FontAccessService.constructor","app.common.FontAccessService.isOpen","app.common.FontAccessService.close"],"mappings":"AAAA,IAAO,GAAG,CA8CT;AA9CD,WAAO,GAAG;IAACA,IAAAA,MAAMA,CA8ChBA;IA9CUA,WAAAA,MAAMA,EAACA,CAACA;QAYfC;YASIC,2BAAmBA,UAAqCA;gBAArCC,eAAUA,GAAVA,UAAUA,CAA2BA;gBAEpDA,IAAIA,CAACA,QAAQA,GAAGA,UAAUA,CAACA;gBAC3BA,IAAIA,CAACA,IAAIA,GAAGA,KAAKA,CAACA;gBAClBA,IAAIA,CAACA,SAASA,GAAGA,KAAKA,CAACA;YAE3BA,CAACA;YAEDD,kCAAMA,GAANA,UAAOA,MAAMA;gBACTE,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;gBACjBA,IAAIA,CAACA,OAAOA,GAAGA,MAAMA,CAACA;gBACtBA,IAAIA,CAACA,QAAQA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,YAAYA,CAACA,WAAWA,CAACA,CAACA;gBACxDA,IAAIA,CAACA,SAASA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,YAAYA,CAACA,YAAYA,CAACA,CAACA;YAC9DA,CAACA;YAEDF,iCAAKA,GAALA;gBACIG,oBAAoBA;gBACpBA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA;YACxBA,CAACA;YApBDH,kDAAkDA;YAC3CA,yBAAOA,GAAGA,CAAEA,YAAYA,CAAEA,CAACA;YAqBtCA,wBAACA;QAADA,CA7BAD,AA6BCC,IAAAD;QA7BYA,wBAAiBA,oBA6B7BA,CAAAA;QAEDA,6HAA6HA;QAC7HA,OAAOA,CAACA,MAAMA,CAACA,iBAAiBA,CAACA;aAC5BA,OAAOA,CAACA,mBAAmBA,EAAEA,iBAAiBA,CAACA,CAACA;IACzDA,CAACA,EA9CUD,MAAMA,GAANA,UAAMA,KAANA,UAAMA,QA8ChBA;AAADA,CAACA,EA9CM,GAAG,KAAH,GAAG,QA8CT","file":"common/fontServices.js","sourcesContent":["module app.common {\n\n    //the interface for the service\n    interface IDataAccessService {\n        fontName: string;\n        fontTitle: string;\n        open: boolean;\n        openPanel: boolean;\n        element: any;\n    }\n\n\n    export class FontAccessService implements IDataAccessService {\n        fontName: string;\n        fontTitle: string;\n        open: boolean;\n        openPanel: boolean;\n        element: any;\n\n        //must be injected in the same order, item1, item2\n        static $inject = [ '$rootScope' ];\n        constructor(public $rootScope: angular.IRootScopeService) {\n\n            this.fontName = 'old name';\n            this.open = false;\n            this.openPanel = false;\n\n        }\n\n        isOpen($event): void {\n            this.open = true;\n            this.element = $event;\n            this.fontName = $event.target.getAttribute('data-name');\n            this.fontTitle = $event.target.getAttribute('data-title');\n        }\n\n        close():void {\n            //this.open = false;\n            this.element = null;\n        }\n\n    }\n\n    //register service as an angular Service - define a service with a lowercase for the name and the upper for the actual class.\n    angular.module('common.services')\n        .service('fontAccessService', FontAccessService);\n}\n"],"sourceRoot":"/source/"}